---
import Header from '../components/Header.astro';
import Slider1 from '../components/home-slider/slider-1.astro';  
import Slider2 from '../components/home-slider/slider-2.astro';
import Slider3 from '../components/home-slider/slider-3.astro';
import '../styles/global.css';

// Pre-calculate which slider to show server-side
const backgrounds = ['slider-1', 'slider-2', 'slider-3'];
const selectedIndex = Math.floor(Math.random() * backgrounds.length);
const selectedSlider = backgrounds[selectedIndex];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <link rel="icon" type="image/png" href={`${import.meta.env.BASE_URL}assets/logo/thumbnail-logo.png`} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta name="generator" content={Astro.generator} />
    <title>ALIFE - Artificial Life Institute</title>
    
    <!-- SEO Meta Tags -->
    <meta name="description" content="ALIFE - Artificial Life Institute: Pioneering evolutionary AI research and development." />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preload" href={`${import.meta.env.BASE_URL}fonts/gt-alpina-fine/GT-Alpina-Fine-Standard-Medium.woff2`} as="font" type="font/woff2" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
      /* Noise effect */
      .noise-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
        opacity: 0.15;
        background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
        animation: noise 0.2s infinite;
        mix-blend-mode: overlay;
      }
      
      /* Slider background positioning - Enhanced for mobile full coverage */
      .slider-background {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        min-height: 100vh !important;
        z-index: 0;
        visibility: hidden;
        opacity: 0;
        /* Ensure coverage on all mobile devices including notched devices */
        min-width: 100vw;
        max-width: 100vw;
      }
      
      .slider-background.show {
        visibility: visible;
        opacity: 1;
      }
      
      /* Extra mobile-specific rules */
      @media (max-width: 768px) {
        .slider-background {
          width: 100vw !important;
          height: 100vh !important;
          min-height: 100vh !important;
          max-height: 100vh !important;
          /* Address mobile browser UI interference and notches */
          height: calc(100vh + env(safe-area-inset-top) + env(safe-area-inset-bottom));
          min-height: calc(100vh + env(safe-area-inset-top) + env(safe-area-inset-bottom));
          max-height: calc(100vh + env(safe-area-inset-top) + env(safe-area-inset-bottom));
          /* Force coverage edges */
          left: 0 !important;
          right: 0 !important;
          top: 0 !important;
          bottom: 0 !important;
        }
        
        /* Prevent any gaps on mobile browsers */
        body {
          overflow: hidden !important;
          margin: 0 !important;
          padding: 0 !important;
        }
        
        html {
          margin: 0 !important;
          padding: 0 !important;
          overflow: hidden !important;
        }
      }
      
      /* Header should be above sliders */
      header {
        position: relative;
        z-index: 50;
      }
      
      @keyframes noise {
        0%, 100% { transform: translate(0, 0); }
        10% { transform: translate(-5%, -5%); }
        20% { transform: translate(-10%, 5%); }
        30% { transform: translate(5%, -10%); }
        40% { transform: translate(-5%, 15%); }
        50% { transform: translate(-10%, 5%); }
        60% { transform: translate(15%, 0%); }
        70% { transform: translate(0%, 15%); }
        80% { transform: translate(-15%, 10%); }
        90% { transform: translate(10%, 5%); }
      }

      @keyframes rotateCW {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      @keyframes rotateCCW {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(-360deg); }
      }

    </style>
  </head>

  <body class="min-h-screen overflow-x-hidden" style="margin: 0; padding: 0; width: 100%; height: 100vh;">
    <!-- Noise overlay -->
    <div class="noise-overlay"></div>
    
    <Header />
    
    <!-- Background sliders - only render the selected one server-side -->
    {selectedSlider === 'slider-1' && (
      <div id="slider-1-background" class="slider-background show">
        <Slider1 />
      </div>
    )}
    {selectedSlider === 'slider-2' && (
      <div id="slider-2-background" class="slider-background show">
        <Slider2 />
      </div>
    )}
    {selectedSlider === 'slider-3' && (
      <div id="slider-3-background" class="slider-background show">
        <Slider3 />
      </div>
    )}
    
    <script>
      sessionStorage.setItem('selectedSlider', `{selectedSlider}`);
    </script>
  </body>
</html>

<style>
  /* Noise effect */
  .noise-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    opacity: 0.15;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    animation: noise 0.2s infinite;
    mix-blend-mode: overlay;
  }
  
  @keyframes noise {
    0%, 100% { transform: translate(0, 0); }
    10% { transform: translate(-5%, -5%); }
    20% { transform: translate(-10%, 5%); }
    30% { transform: translate(5%, -10%); }
    40% { transform: translate(-5%, 15%); }
    50% { transform: translate(-10%, 5%); }
    60% { transform: translate(15%, 0%); }
    70% { transform: translate(0%, 15%); }
    80% { transform: translate(-15%, 10%); }
    90% { transform: translate(10%, 5%); }
  }
</style>
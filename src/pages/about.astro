---
import '../styles/global.css';
import Header from '../components/Header.astro';
import History from '../components/sections/about/History.astro';
import Mission from '../components/sections/about/Mission.astro';
import WhoWeAre from '../components/sections/about/WhoWeAre.astro';
import AboutUsLoading from '../components/loaders/AboutUsLoading.astro';

---

<html lang="en">
  <head>
    <meta charset="utf-8" />  
    <link rel="icon" type="image/png" href="/assets/logo/thumbnail-logo.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>About Us - ALIFE</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">
  </head>
  <body class="min-h-screen bg-gray-50">
    <!-- Loading Screen -->
    <div id="loading-screen" class="fixed inset-0 z-50 transition-all duration-700 ease-in-out">
      <AboutUsLoading />
    </div>
    
    <!-- Main Content (Hidden Initially) -->
    <div id="main-content" class="opacity-0 transition-opacity duration-500 ease-in hidden">
      <Header />
      <!-- Main content -->
      <main class="max-w-4xl mx-auto px-4 sm:px-6 sm:pt-10 pb-8 sm:pb-12" style="font-family: 'Inter', sans-serif;">
      <!-- Tabs Section -->
      <div>
        <div class="sticky top-20 bg-gray-50 z-40">
          <nav class="flex items-center justify-center gap-0" aria-label="Tabs" role="tablist" aria-orientation="horizontal">
            <button type="button" class="active py-4 px-4 inline-flex items-center gap-x-2 border-b-2 border-primary text-sm whitespace-nowrap text-primary font-semibold hover:text-primary focus:outline-hidden focus:text-primary disabled:opacity-50 disabled:pointer-events-none" id="tabs-with-underline-item-1" aria-selected="true" data-hs-tab="#tabs-with-underline-1" aria-controls="tabs-with-underline-1" role="tab">
              About
            </button>
            <div class="h-6 w-px bg-gray-300 mx-2"></div>
            <button type="button" class="py-4 px-4 inline-flex items-center gap-x-2 border-b-2 border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-primary focus:outline-hidden focus:text-primary disabled:opacity-50 disabled:pointer-events-none" id="tabs-with-underline-item-2" aria-selected="false" data-hs-tab="#tabs-with-underline-2" aria-controls="tabs-with-underline-2" role="tab">
              History
            </button>
            <div class="h-6 w-px bg-gray-300 mx-2"></div>
            <button type="button" class="py-4 px-4 inline-flex items-center gap-x-2 border-b-2 border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-primary focus:outline-hidden focus:text-primary disabled:opacity-50 disabled:pointer-events-none" id="tabs-with-underline-item-3" aria-selected="false" data-hs-tab="#tabs-with-underline-3" aria-controls="tabs-with-underline-3" role="tab">
              Mission
            </button>
          </nav>
        </div>

        <div class="mt-2">
          <!-- About Section -->
          <section id="about-section" class="section-content pt-8 pb-16">
            <WhoWeAre />  
          </section>
          
          <!-- History Section -->
          <section id="history-section" class="section-content pt-8 pb-16">
            <History />
          </section>
          
          <!-- Mission Section -->
          <section id="mission-section" class="section-content pt-8 pb-16">
            <Mission />
          </section>
        </div>
      </div>
    </main>
    </div>

    <!-- Scroll-based tab switching script -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const tabs = document.querySelectorAll('[role="tab"]');
        const sections = document.querySelectorAll('.section-content');
        
        // Map tabs to sections
        const tabSectionMap = {
          'tabs-with-underline-item-1': 'about-section',
          'tabs-with-underline-item-2': 'history-section', 
          'tabs-with-underline-item-3': 'mission-section'
        };

        // Function to update active tab based on scroll position
        function updateActiveTab() {
          const scrollPosition = window.scrollY + window.innerHeight / 2;
          let activeSection = null;
          
          sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionBottom = sectionTop + section.offsetHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionBottom) {
              activeSection = section.id;
            }
          });
          
          // If we're at the very top, activate the first section
          if (window.scrollY < 100) {
            activeSection = 'about-section';
          }
          
          // Update tab appearance
          tabs.forEach(tab => {
            const tabId = tab.getAttribute('id');
            const sectionId = tabSectionMap[tabId];
            
            if (sectionId === activeSection) {
              // Activate tab
              tab.classList.add('active', 'font-semibold', 'text-primary', 'border-primary');
              tab.classList.remove('text-gray-500', 'border-transparent');
              tab.setAttribute('aria-selected', 'true');
            } else {
              // Deactivate tab
              tab.classList.remove('active', 'font-semibold', 'text-primary', 'border-primary');
              tab.classList.add('text-gray-500', 'border-transparent');
              tab.setAttribute('aria-selected', 'false');
            }
          });
        }

        // Add scroll event listener
        let scrollTimeout;
        window.addEventListener('scroll', function() {
          // Throttle scroll events for better performance
          if (scrollTimeout) {
            clearTimeout(scrollTimeout);
          }
          scrollTimeout = setTimeout(updateActiveTab, 10);
        });

        // Initial call to set correct tab on page load
        updateActiveTab();

        // Optional: Add click functionality to scroll to sections
        tabs.forEach(tab => {
          tab.addEventListener('click', function(e) {
            e.preventDefault();
            const tabId = tab.getAttribute('id');
            const sectionId = tabSectionMap[tabId];
            const targetSection = document.getElementById(sectionId);
            
            if (targetSection) {
              const offsetTop = targetSection.offsetTop - 100; // Account for sticky header
              window.scrollTo({
                top: offsetTop,
                behavior: 'smooth'
              });
            }
          });
        });

        // Check if this is a back navigation
        const isBackNavigation = sessionStorage.getItem('alife-back-navigation') === 'true';
        
        if (isBackNavigation) {
          // Skip loader for back navigation
          const loadingScreen = document.getElementById('loading-screen');
          const mainContent = document.getElementById('main-content');
          
          if (loadingScreen && mainContent) {
            loadingScreen.classList.add('hidden');
            mainContent.classList.remove('hidden');
            mainContent.classList.remove('opacity-0');
            mainContent.classList.add('opacity-100');
          }
          
          // Clear the back navigation flag
          sessionStorage.removeItem('alife-back-navigation');
        } else {
          // Normal loading animation for fresh page loads
          setTimeout(function() {
            const loadingScreen = document.getElementById('loading-screen');
            const mainContent = document.getElementById('main-content');
            
            if (loadingScreen && mainContent) {
              // Slide loading screen upward using CSS class
              loadingScreen.classList.add('loading-slide-up');
              
              setTimeout(function() {
                if (loadingScreen && mainContent) {
                  // Hide loading screen and show main content
                  loadingScreen.classList.add('hidden');
                  mainContent.classList.remove('hidden');
                  
                  // Fade in main content
                  setTimeout(function() {
                    if (mainContent) {
                      mainContent.classList.remove('opacity-0');
                      mainContent.classList.add('opacity-100');
                    }
                  }, 50);
                }
              }, 700);
            }
          }, 2500); // Show loading for 2.5 seconds
        }
      });
    </script>
  </body>
</html>

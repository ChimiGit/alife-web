---
/* eslint-disable indent */
import '../../styles/global.css';
import { marked } from 'marked';
import Header from '../../components/Header.astro';
import getAllJobs from '../../utils/jobs.ts';
import { t, getEffectiveLocale } from '../../utils/i18n.ts';

const currentLocale = getEffectiveLocale(Astro.url.pathname);

// eslint-disable-next-line import/prefer-default-export
export async function getStaticPaths() {
  const jobs = await getAllJobs();
  return jobs.map((job) => ({
    params: { slug: job.slug },
    props: { job },
  }));
}

const { job } = Astro.props;

// Convert markdown to HTML
const htmlContent = job.content ? await marked(job.content) : '';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{job.title} - ALIFE Careers</title>
    <meta name="description" content={`Join our team as a ${job.title} at ${job.location}. ${job.department} position.`} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  </head>

  <body class="min-h-screen bg-white" style="font-family: 'Inter', sans-serif;">
    <Header locale={currentLocale} />

    <main class="max-w-6xl mx-auto px-4 sm:px-6 py-8">
      <!-- Hero Section -->
      <section class="text-center mb-8 sm:mb-10">
        <h1 class="text-64px sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl text-primary mb-6 sm:mb-8 leading-tight" style="font-family: 'GT Alpina Fine', serif;">
          Where Brilliant<br />
          Minds Explore Together
        </h1>
      </section>
      <p class="text-20px sm:text-base text-primary max-w-4xl mx-auto leading-relaxed mb-12 sm:mb-20 px-4 sm:px-0 font-light" style="font-family: 'Inter', sans-serif; line-height: 2;">
        {t(currentLocale, 'jobs.subtitle')}
      </p>

      <!-- Join Us Section with Tabs -->
      <section class="text-center mb-12 sm:mb-20">
        <h2 class="text-40px sm:text-3xl md:text-4xl font-bold text-primary mb-6 sm:mb-8" style="font-family: 'GT Alpina Fine', serif;">
          {t(currentLocale, 'jobs.joinUs')}
        </h2>
        <div class="flex flex-row justify-center gap-4 mb-12 font-light text-sm">
          <a href="/career" class="main-tab border border-primary text-primary px-6 py-2 rounded-full transition-colors duration-200">
            {t(currentLocale, 'jobs.ourTeam')}
          </a>
          <a href="/career" class="main-tab active bg-primary text-white px-6 py-2 rounded-full transition-colors duration-200">
            {t(currentLocale, 'jobs.jobs')}
          </a>
        </div>
      </section>

      <!-- Separator -->
      <hr class="border-primary mb-8">

      <!-- Job Title & Details -->
      <section class="text-center mb-12">
        <h2 class="text-40px md:text-5xl font-bold text-primary mb-4" style="font-family: 'GT Alpina Fine', serif;">
          {job.title}
        </h2>
        <p class="text-16px text-primary mb-6">{job.location}</p>
        
        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center mb-8">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span class="text-primary">{new Date(job.deadline).toLocaleDateString('en-US', {
              day: '2-digit',
              month: 'short',
              year: 'numeric'
            })}</span>
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="text-primary">{job.type}</span>
          </div>
        </div>
      </section>  

      <!-- Separator -->
      <hr class="border-primary mb-12">

      <!-- Job Content from Markdown -->
      <div class="job-markdown-content">
        <div set:html={htmlContent
          .replace(/<h2>/g, '<h2 style="font-family: \'GT Alpina Fine\', sans-serif; color: #2E3192; font-size: 1.5rem; font-weight: 700; margin-bottom: 1rem; margin-top: 3rem;">')
          .replace(/<h2 style="font-family: 'Inter', sans-serif; color: #2E3192; font-size: 1.5rem; font-weight: 700; margin-bottom: 1rem; margin-top: 3rem; font-size: '20px'">About ALife<\/h2>/g, '<h2 style="font-family: \'Inter\', sans-serif; color: #2E3192; font-size: 1.5rem; font-weight: 700; margin-bottom: 1rem; margin-top: 0;">About ALife</h2>')
          .replace(/<p>/g, '<p style="margin-bottom: 1rem; line-height: 1.7; color: #2E3192; font-family: \'Inter\', sans-serif; font-weight: 300;">')
          .replace(/<ul>/g, '<ul style="margin-bottom: 3rem; padding-left: 0; list-style: none;">')
          .replace(/<li>/g, '<li style="margin-bottom: 0.75rem; color: #2E3192; display: flex; align-items: flex-start; font-family: \'Inter\', sans-serif; font-weight: 300;"><span style="width: 8px; height: 8px; background-color: #2E3192; border-radius: 50%; margin-top: 8px; margin-right: 12px; flex-shrink: 0;"></span>')
          .replace(/<\/li>/g, '</li>')
        }></div>
      </div>

      <!-- Separator -->
      <hr class="border-primary mb-12">

      <!-- Application Form -->
      <section class="mb-12">
        <h3 class="text-40px font-bold text-primary mb-4" style="font-family: 'GT Alpina Fine', serif;">
          {t(currentLocale, 'jobs.applyNow')}.
        </h3>
        <p class="text-primary text-16px mb-8">
          Tell us why you'd be a good fit for the {job.title} role.
        </p>

        <form class="space-y-6" id="job-application-form">
          <!-- Name Fields -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="firstName" class="block text-sm font-medium text-primary mb-2">{t(currentLocale, 'jobs.applicationForm.firstName')}</label>
              <input 
                type="text" 
                id="firstName" 
                name="firstName" 
                placeholder="First Name"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                required
              >
            </div>
            <div>
              <label for="lastName" class="block text-sm font-medium text-primary mb-2">{t(currentLocale, 'jobs.applicationForm.lastName')}</label>
              <input 
                type="text" 
                id="lastName" 
                name="lastName" 
                placeholder="Last Name"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                required
              >
            </div>
          </div>

          <!-- Email Field -->
          <div>
            <label for="email" class="block text-sm font-medium text-primary mb-2">{t(currentLocale, 'jobs.applicationForm.email')}</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              placeholder="example123@gmail.com"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
              required
            >
          </div>

          <!-- Phone Field -->
          <div>
            <label for="phone" class="block text-sm font-medium text-primary mb-2">{t(currentLocale, 'jobs.applicationForm.phone')}</label>
            <input 
              type="tel" 
              id="phone" 
              name="phone" 
              placeholder="+0 123 456 789"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
            >
          </div>

          <!-- Resume Upload -->
          <div>
            <label for="resume" class="block text-sm font-medium text-primary mb-2">{t(currentLocale, 'jobs.applicationForm.resume')}</label>
            <div class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-primary transition-colors duration-200">
              <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
              </svg>
              <p class="text-gray-600 mb-2">{t(currentLocale, 'jobs.applicationForm.uploadResume')}</p>
              <p class="text-sm text-gray-500">{t(currentLocale, 'jobs.applicationForm.resumeSize')}</p>
              <input 
                type="file" 
                id="resume" 
                name="resume" 
                accept=".pdf"
                class="hidden"
                required
              >
              <button 
                type="button" 
                onclick="document.getElementById('resume').click()"
                class="mt-4 bg-primary text-white px-6 py-2 rounded-lg hover:bg-primary transition-colors duration-200"
              >
{t(currentLocale, 'jobs.applicationForm.chooseFile')}
              </button>
            </div>
          </div>

          <!-- Checkboxes -->
          <div class="space-y-4">
            <div class="flex items-start">
              <input 
                type="checkbox" 
                id="privacy" 
                name="privacy" 
                class="mt-1 mr-3 text-primary focus:ring-primary"
                required
              >
              <label for="privacy" class="text-sm text-primary font-light">
                {t(currentLocale, 'jobs.applicationForm.privacyNotice')}
              </label>
            </div>
            <div class="flex items-start">
              <input 
                type="checkbox" 
                id="accuracy" 
                name="accuracy" 
                class="mt-1 mr-3 text-primary focus:ring-primary"
                required
              >
              <label for="accuracy" class="text-sm text-primary font-light">
                {t(currentLocale, 'jobs.applicationForm.accuracyCheck')}
              </label>
            </div>
          </div>

          <!-- Important Note -->
          <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
            <p class="text-sm text-primary">
              <strong>{t(currentLocale, 'jobs.applicationForm.importantNote')}</strong>
            </p>
          </div>

          <!-- Submit Button -->
          <div class="flex justify-end">
            <button 
              type="submit" 
              class="bg-primary text-white text-sm px-8 py-3  font-medium hover:bg-primary transition-colors duration-200" style="border-radius: 100px;"
            >
{t(currentLocale, 'jobs.applicationForm.submitApplication')}
            </button>
          </div>
        </form>
      </section>
    </main>


    <script define:vars={{ job }}>
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('job-application-form');
        const fileInput = document.getElementById('resume');
        
        // Handle file upload display
        if (fileInput) {
          fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
              const uploadArea = fileInput.closest('.border-dashed');
              const fileName = file.name;
              const fileSize = (file.size / 1024 / 1024).toFixed(2);
              
              uploadArea.innerHTML = `
                <svg class="w-12 h-12 mx-auto text-green-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <p class="text-gray-600 mb-2">${fileName}</p>
                <p class="text-sm text-gray-500">${fileSize} MB</p>
                <button 
                  type="button" 
                  onclick="document.getElementById('resume').click()"
                  class="mt-4 bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition-colors duration-200"
                >
                  Change File
                </button>
              `;
            }
          });
        }

        // Handle form submission
        if (form) {
          form.addEventListener('submit', (e) => {
            e.preventDefault();
            
            // Get form data
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);
            
            // Validate file size
            const file = fileInput.files[0];
            if (file && file.size > 3.5 * 1024 * 1024) {
              // Show error message
              const errorDiv = document.createElement('div');
              errorDiv.className = 'text-red-500 text-sm mt-2';
              errorDiv.textContent = 'File size must be under 3.5MB';
              fileInput.parentNode.appendChild(errorDiv);
              setTimeout(() => errorDiv.remove(), 3000);
              return;
            }
            
            // Create email body
            const emailBody = `
Application for ${data.firstName} ${data.lastName}

Position: ${job.title}
Location: ${job.location}

Contact Information:
- Email: ${data.email}
- Phone: ${data.phone}

Resume: ${file ? file.name : 'No file uploaded'}

Please find the attached resume for your review.

Thank you for considering my application.

Best regards,
${data.firstName} ${data.lastName}
            `.trim();

            // Create mailto link
            const mailtoLink = `mailto:careers@alife.ai?subject=Application for ${job.title}&body=${encodeURIComponent(emailBody)}`;
            
            // Open email client
            window.location.href = mailtoLink;
          });
        }
      });
    </script>
  </body>
</html>
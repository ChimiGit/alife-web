---
// Circular ring pattern particle system component
import Header from './Header.astro';

export interface Props {
  lang?: string;
  translations?: any;
}

const { lang = 'en', translations } = Astro.props;
---

<div class="relative min-h-screen overflow-hidden" style="background-color: #29D6E2;">
  <!-- Header -->
  <div class="relative z-10">
    <Header lang={lang} translations={translations} />
  </div>

  <!-- Text Content -->
  <main class="relative z-20 min-h-screen mt-5">
    <div class="text-left max-w-7xl mx-auto px-4 space-y-6">
      <h1 class="text-9xl text-primary" style="font-family: 'GT Alpina Fine', serif;">
        {translations?.titleLine1 || 'Where'}
      </h1>
      <h1 class="text-9xl text-primary" style="font-family: 'GT Alpina Fine', serif;">
        {translations?.titleLine2 || 'Evolution Meets'}
      </h1>
      <h1 class="text-9xl text-primary" style="font-family: 'GT Alpina Fine', serif;">
        {translations?.titleLine3 || 'Innovation'}
      </h1>
      <p class="text-primary max-w-4xl leading-relaxed" style="font-family: 'Inter', sans-serif; font-size: '16px';">
        {translations?.description || 'We\'re cultivating alternative approaches through evolution itselfâ€”creating systems that don\'t just optimize, but discover, surprise, and continuously evolve. This is where we pave a way for a future not engineered, but grown organically through bottom-up ecosystems where humans and artificial life forms collaborate as complementary partners.'}
      </p>
    </div>
  </main>

  <!-- Simple Particle Canvas -->
  <canvas id="canvas" class="absolute inset-0 block"></canvas>

  <script>
    // Simple particle system
    const canvas = document.getElementById('canvas') as HTMLCanvasElement;
    const ctx = canvas?.getContext('2d');

    // Set canvas size
    function resizeCanvas() {
      if (canvas) {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
      }
    }

    // Simple animation
    function animate() {
      if (!ctx || !canvas) return;
      ctx.fillStyle = '#29D6E2';
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Draw some simple particles
      ctx.fillStyle = 'white';
      for (let i = 0; i < 50; i++) {
        const x = Math.random() * canvas.width;
        const y = Math.random() * canvas.height;
        ctx.beginPath();
        ctx.arc(x, y, 2, 0, Math.PI * 2);
        ctx.fill();
      }

      requestAnimationFrame(animate);
    }

    if (canvas && ctx) {
      resizeCanvas();
      window.addEventListener('resize', resizeCanvas);
      animate();
    }
  </script>
</div>

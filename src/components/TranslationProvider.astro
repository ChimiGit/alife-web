---
import { loadMarkdownTranslations } from '../utils/markdown-translations.ts';

export interface Props {
  lang?: string;
}

const { lang = 'en' } = Astro.props;

// Load translations on the server side
const translations = await loadMarkdownTranslations(lang);
---

<script define:vars={{ translations, lang }}>
  // Make translations available globally
  window.ALIFE_TRANSLATIONS = translations;
  window.ALIFE_CURRENT_LANG = lang;
  
  // Helper function to get translation
  window.getTranslation = function(key, fallback = key) {
    if (!window.ALIFE_TRANSLATIONS) return fallback;
    
    // Handle nested keys with dot notation
    const keys = key.split('.');
    let value = window.ALIFE_TRANSLATIONS;
    
    for (let i = 0; i < keys.length; i++) {
      const k = keys[i];
      if (value && typeof value === 'object' && k in value) {
        value = value[k];
      } else {
        return fallback;
      }
    }
    
    return value || fallback;
  };
  
  // Helper function to switch language
  window.switchLanguage = function(newLang) {
    const currentUrl = new URL(window.location.href);
    currentUrl.searchParams.set('lang', newLang);
    window.location.href = currentUrl.toString();
  };
</script>
